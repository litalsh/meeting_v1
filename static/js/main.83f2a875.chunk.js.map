{"version":3,"sources":["Task.js","useLocalStorage.js","App.js","reportWebVitals.js","index.js"],"names":["task","props","className","class","onDoubleClick","move","sliderClass","duration","type","min","max","step","defaultValue","onMouseUp","sliderControl","onChange","e","change","target","value","checked","title","onClick","remove","id","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","stack","setStack","heap","setHeap","undefined","length","timer","setTimer","isRunning","setIsRunning","tempDuration","setTeampDuration","minutes","Math","floor","seconds","abs","toString","taskRemoveHandler","taskIndex","findIndex","tempList","splice","console","log","keyboardRemoveHandler","ctrlKey","shiftKey","which","tempStack","keyboardStartTimerHandler","altKey","document","addEventListener","removeEventListener","window","setInterval","clearInterval","changeListHandler","topic","slider","tempHeap","map","Task","index","parseInt","adjustDurationHandler","placeholder","onKeyDown","event","uuidv4","autoFocus","aria-flowto","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83f2a875.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst task = (props) => {\r\n \r\n  return(\r\n  <li className={props.class}  key={props.id} onDoubleClick={props.move}>\r\n    <div className={props.sliderClass}>\r\n      <span className=\"duration-display\">{props.duration}</span>\r\n      <input type=\"range\" className=\"show-slider\" \r\n      min=\"1\" max=\"20\" step=\"1\"\r\n      defaultValue={props.duration} \r\n      onMouseUp={props.sliderControl} \r\n      onChange={e=>props.change(e.target.value)} />\r\n    </div>\r\n    <label className={props.checked}>{props.title}</label>\r\n    <button className=\"remove\" onClick={props.remove}>X</button>\r\n  </li>\r\n)};\r\n\r\nexport default task;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst PREFIX = 'meeting-manament-';\r\n\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\n\r\nexport default useLocalStorage;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Task from \"./Task\";\nimport useLocalStorage from './useLocalStorage';\n\nconst App = () => {\n  const [stack, setStack] = useLocalStorage('stack', []);\n  const [heap, setHeap] = useLocalStorage('heap', []);\n  const [timer, setTimer] = useState(stack[0] !== undefined ? stack[stack.length - 1].duration * 60 : 0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [tempDuration, setTeampDuration] = useState();\n\n  let minutes = Math.floor(timer / 60);\n  let seconds = Math.abs(timer % 60);\n  minutes = minutes.toString().length === 1 ? \"0\" + minutes : minutes;\n  seconds = seconds.toString().length === 1 ? \"0\" + seconds : seconds;\n\n  const newTaskHandler = (event) => {\n    if (event.which === 13 && event.target.value !== '') {\n      setStack([\n        ...stack,\n        { id: uuidv4(), type: 'stack', topic: event.target.value, duration: 5, slider: 'slider-container' }\n      ]);\n      event.target.value = '';\n      setIsRunning(false);\n      console.log(stack)\n      setTimer(stack[0] !== undefined ? stack[stack.length - 1].duration * 60 : null);\n    };\n  };\n\n  const newHeapHandler = (event) => {\n    if (event.which === 13 && event.target.value !== '') {\n      setHeap([\n        ...heap,\n        { id: uuidv4(), type: 'heap', topic: event.target.value, duration: 5, slider: 'hide-slider' }\n      ]);\n      event.target.value = '';\n    };\n  };\n\n  const taskRemoveHandler = (id, type) => {\n    if (type === 'stack') {\n      const taskIndex = stack.findIndex(task => {\n        return task.id === id;\n      });\n\n      let tempList = [...stack];\n      tempList.splice(tempList[taskIndex], 1);\n      setStack(tempList);\n      if (taskIndex === stack.length - 1) {\n        setIsRunning(false);\n        setTimer(stack[stack.length - 1].duration * 60);\n      }\n    };\n    if (type === 'heap') {\n      const taskIndex = heap.findIndex(task => {\n        return task.id === id;\n      });\n\n      let tempList = [...heap];\n      tempList.splice(tempList[taskIndex], 1);\n      setHeap(tempList)\n    };\n    return console.log('taskRmoveHandler: ', stack);\n\n  }\n\n  const keyboardRemoveHandler = (e) => {\n    if (e.ctrlKey && e.shiftKey && e.which === 88) {\n      let tempStack = [...stack];\n      tempStack.splice(tempStack.length - 1, 1);\n      setStack(tempStack);\n      setIsRunning(false);\n      setTimer(stack[stack.length - 2] ? stack[stack.length - 2].duration * 60 : 0);\n    }\n  }\n\n  const adjustDurationHandler = (id) => {\n    const index = stack.findIndex(task => task.id === id);\n    let tempStack = [...stack];\n    tempStack[index].duration = parseInt(tempDuration);\n\n    setStack(tempStack);\n    if (index === stack.length - 1) {\n      setTimer(stack[stack.length - 1].duration * 60);\n      console.log(stack)\n    }\n  }\n\n  // start of pause timer using the keyboard\n  const keyboardStartTimerHandler = (e) => {\n    if (e.altKey && e.which === 83) {\n      if (!isRunning) {\n        //setTimer(stack[stack.length - 1].duration * 60);\n        setIsRunning(true);\n        console.log(stack)\n      } else {\n        // let tempStack = [...stack];\n        // tempStack[tempStack.length - 1].duration = minutes + seconds / 60;\n        // setStack(tempStack);\n        setIsRunning(false);\n\n        console.log(stack)\n\n      }\n    }\n  }\n\n  // remove from stack with the keyboard\n  useEffect(() => {\n    if (document) {\n      document.addEventListener('keydown', keyboardRemoveHandler);\n    }\n    return () => {\n      document.removeEventListener('keydown', keyboardRemoveHandler);\n    }\n  }, [stack]);\n\n  // starts and stops the countdown\n  useEffect(() => {\n    if (document) {\n      document.addEventListener('keydown', keyboardStartTimerHandler);\n      if (isRunning) {\n        const id = window.setInterval(() => {\n          setTimer(timer => timer - 1);\n        }, 1000);\n        return () => window.clearInterval(id);\n      }\n    }\n    return () => {\n      document.removeEventListener('keydown', keyboardStartTimerHandler);\n    }\n  }, [isRunning])\n\n\n  const changeListHandler = (id, type) => {\n    // move task from stack to heap\n    if (type === 'stack') {\n      const taskIndex = stack.findIndex(task => {\n        return task.id === id;\n      });\n      setHeap([...heap, { id: stack[taskIndex].id, type: 'heap', topic: stack[taskIndex].topic, duration: stack[taskIndex].duration, slider: 'hide-slider' }]);\n\n      let tempStack = [...stack];\n      tempStack.splice(taskIndex, 1);\n      setStack(tempStack);\n      console.log('change to heap ', stack, '  ', heap)\n    };\n\n    // move task from heap to stack\n    if (type === 'heap') {\n      const taskIndex = heap.findIndex(task => {\n        return task.id === id;\n      });\n      setStack([...stack, { id: heap[taskIndex].id, type: 'stack', topic: heap[taskIndex].topic, duration: heap[taskIndex].duration, slider: 'slider-container' }]);\n\n      let tempHeap = [...heap];\n      tempHeap.splice(taskIndex, 1);\n      setHeap(tempHeap);\n      console.log('change to stack ', stack, '  ', heap)\n    };\n  }\n\n  const clearListsHandler = () => {\n    setHeap([]);\n    setStack([]);\n    setTimer(0)\n  }\n\n  return (\n    <div className=\"container\">\n      <button className='clear-btn' onClick={() => clearListsHandler()}>Clear all</button>\n      <h5 className=\"instructions\">Ctrl+Shift+X: Removes current stack  |  Double click: Moves the task between lists  |  Alt+S: Start/stop the timer</h5>\n      {stack[0] !== undefined ? <h3 className=\"timer\">{minutes}:{seconds}</h3> : null}\n      <div className=\"current-task\">\n        <h1>{stack[0] !== undefined ? stack[stack.length - 1].topic : null}</h1>\n      </div>\n      <fieldset className=\"task-list stack-list\">\n        <legend>Stack</legend>\n        <ul className=\"stack-list\">\n          <>\n            {stack[0] !== undefined ? stack.map((task, id) => (\n              <Task title={task.topic}\n                key={id}\n                remove={() => taskRemoveHandler(task.id, task.type)}\n                move={() => changeListHandler(task.id, task.type)}\n                class={\"stack_item\"}\n                duration={task.duration}\n                sliderClass={task.slider}\n                sliderControl={() => adjustDurationHandler(task.id)}\n                change={value => setTeampDuration(value)}\n              />\n            )) : null}\n          </>\n        </ul>\n        <input type=\"text\" placeholder=\"Add a task to stack\" onKeyDown={newTaskHandler} className='stack-input' autoFocus aria-flowto='heap-input' />\n      </fieldset>\n\n      <fieldset className=\"task-list heap-list-container\">\n        <legend>Heap</legend>\n        <input type=\"text\" placeholder=\"Add a task to heap\" onKeyDown={newHeapHandler} className='heap-input' aria-flowto='stack-input' />\n        <ul className=\"heap-list\">\n          <>\n            {heap[0] !== undefined ? heap.map((task, id) => (\n              <Task title={task.topic}\n                key={id}\n                remove={() => taskRemoveHandler(task.id, task.type)}\n                move={() => changeListHandler(task.id, task.type)}\n                class={\"heap_item\"}\n                duration={task.duration}\n                sliderClass={task.slider} />\n            )) : null}\n          </>\n        </ul>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}